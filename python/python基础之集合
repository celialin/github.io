1、集合定义
    （1）什么是集合
        集合是一种数据类型，用于存储过个元素，并确保元素的唯一性
        集合的元素是无序的（没有下标），不可通过索引或切片进行访问
        集合的主要特点是元素不重复，相同的元素在集合中只会出现一次
        使用{}或者set()函数来定义和创建集合
        集合提供了各种集合运算，如并集、交集、差集等操作

    （2）集合的创建
        重点：不能使用{}创建一个空集合。因为此种方式创建的类型为字典
        创建集合   
            s1 = {1,2,3,4,5} #是普通的元素，字典是键值对
            
            nums = [1,2,3,4,5,1,1,2,3,4,5,6,7,8]
            nums_set = set(nums) #{1,2,3,4,5,6,7,8}
            
            将集合再转回列表
            nums1 = list(nums_set) #[1,2,3,4,5,6,7,8]

2、集合操作
    （1）添加操作
        add() 
            add() 向集合中添加一个元素
            set1 = {1,2,3,4}
            set1.add(5)  print(set1) #{1,2,3,4,5}

        update() 
            update() 更新集合，添加来自other中的所有元素。other是一个可迭代对象，如果数据再集合中存在则不更新 
            set1 = {1,2,3}
            set1.update((3,4,5,0))  #{0,1,2,3,4,5}
            set1.update([3,4,5,0])  #{0,1,2,3,4,5}
            set1.update({3,4,5,0})  #{0,1,2,3,4,5}

    （2）删除操作
        pop()
            pop() 从集合中取出并删除元素，如果集合为空，则抛出错误
            set1 = {1,2,3}
            set1.pop()  #

        remove() 
            remove() 删除元素,
            set1 = {1,2,3}
            set1.remove(1) #{2,3}

    （3）判断两个集合是否不相交
        isdisjoint() 
            isdisjoint() 如果集合中没有与other共有的元素则返回True，否则为False。当且仅当两个集合的交集为空集合时，两者为不相交集合
            s = {1,2,3}
            print(s.isdisjoint({4,5,6}))

    （4）判断一个集合是另一个集合的子集
        issubset() 
            issubset() 检测是否集合中的每个元素在other中,如果是则True，否则False
            s = {1,2,3}
            print(s.issubset({1,2,3,4})) #True

    （5）判断集合是否是另一个集合的超集
        issuperset()
            issuperset() 检测是否other中的每个元素都在集合之中.如果是则为True，否则为False
            s = {1,2,3,4}
            print(s.issuperset({1,2}))

    （6）交集
        intersection()
            intersection() 返回一个新集合，其中包含原集合以及others指定的所有集合中共有的元素
            s1 = {1,2,3,4}
            s2 = {3,4,5,6}
            s3 = {5,6,7,8}
            print(s1.intersection(s2))  #{3,4}
            print(s1.intersection(s2,s3))  #set()，空集
            print(s1.intersection(s3)) #set()，空集
    
