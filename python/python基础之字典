1、字典定义
    （1）字典的定义
        是一种容器数据类型，用于存储键值对（key-value）的数据集合
        字典是无序的，可变的，且可以存储任意类型的元素
        用花括号定义，保存key-value形式表示字典
            key必须是一个可哈希的对象
            列表类型不具备可哈希性。数字、字符串、元组具备可哈希性

    （2）字典的创建
        字面量创建
            dict1 = {}
            dict2 = {"name":"Alice","age":25}
        构建方法
            d1 = dict(name="jack",age=23,gender="male")
            d2 = dict([("name","rose"),["age",26]])
            
            keys = ["name","age","gender","address"]
            values=[""]

    （3）字典数据访问
        字典类型没有类似元组、列表有数字下标索引。
        字典使用key，来获取对应的值，使用key的方式同下标索引一样。

    （4）字典元素添加与修改
        每个元素都以键值对的形式表示，一个key对应一个value，在字典中，key具有唯一性。
        当key在字典中不存在时，则是添加数据，如果key存在，则对当前key对应的值进行修改更新

    （5）字典元素的删除
        使用del，删除元素
            dic1 = ["address":"北京"]
            del dic1["address"]

    （6）字典的有序性（3.7+版本才有）

    （7）字典的应用场景
        适用于存储具有相关性的数据，如用户信息、学生成绩
        提供快速查找和访问数据的能力，通过键可以直接定位对应的值，而不需要便利整个字典
        字典作为数据容器，提供丰富的操作方法，可以方便进行便利、检索、插入和删除操作。可以通过循环便利字典键或值，通过键值对的添加和删除来动态修改字典的内容。这种灵活性使得字典成为处理各种数据结构的重要工具

2、字典操作
    （1）获取数据类操作
        keys()
            keys() 用来获取字典中所有的key，保存到列表中，并以dic_keys类型返回
            stu = {'name':"tom",'address':"beijing"}
            ks = stu.keys()
            print(ks)  #dict_keys(['name', 'address'])
            
        values()
            values() 用来获取字典中所有的value，保存到列表中，并以dict_values类型返回
            stu = {'name':"tom",'address':"beijing"}
            vs = stu.values()
            print(vs)  #dict_values(['tom', 'beijing'])
            
        items()
            items() 用来获取字典中所有的键值对，每个元素脸值对都以一个元组保存，将所有元素元组保存到一个列表中，并以dict_items类型返回
            stu = {'name':"tom",'address':"beijing"}
            its = stu.items()
            print(its)  #dict_items([('name', 'tom'), ('address', 'beijing')])

        get(key,value)
            get(key,value)用来获取key对应的值，如果指定的key不存在，则返回默认值。

    （2）添加更新类操作
        setdefault(key,default)
            setdefault(key,default)给一个不存在的key添加一个默认值，并将该键值对保存到字典中。
            在一些场景下，字典的key存在，但对应的值没有，此时可以使用该方法
            stu = {'name':"tom",'age':''}
            stu.setdefault('age',23)
            
        fromkeys(keys,val)
            fromkeys(keys,val)用于创建一个新字典，以序列keys中元素做字典的键，value为字典所有键对应的初始值默认为None
            该方法静态方法，需要使用字典类型名dict调用。该方法如果给给定keys参数，则所有的key对应值默认为None，如果给定val值，则所有key对应的值为val。
            ks = ('name','age','gender')
            s1 = dict.fromkeys(ks)
            print(s1)

        update(d/iterable)
            update(d/iterable)使用参数重的数据更新当前字典
            该方法的参数可以接收一个字典，也可接收一个可迭代对象，如果参数数据中的key在当前字典中存在，则使用新值更新字典中的键值对，如果参数数据中的key在当前字典内中不存在，则将键值对添加到当前字典中。

    （3）删除类操作
        popitem() 
            popitem() 获取并删除字典中最后一个元素
            stu = {'name':"tom",'gender':"male",'age':23}
            item = stu.popitem()
            print(item) #('age',23)
            print(stu)  #{'name':"tom",'gender':"male"}

        pop(key) 
            pop(key) 用于获取并删除字典中指定key对应的键值对，如果指定的key不存在，则抛出错误
            stu = {'name':"tom",'gender':"male",'age':23}
            v = stu.pop('name')
            print(v)   #('name','tom')
            print(stu)  #{'gender':"male",'age':23}

        
