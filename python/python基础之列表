1、列表定义
    （1）什么是列表
        是一种有序、可变、异构的数据集合，可以存储多个不同类型的元素

    （2）列表的特点
        有序性，列表元素添加，是顺序进行存储，每个元素都有一个对应的索引，可以通过索引访问和操作列表的元素
        可变性，可以通过索引来修改、插入或删除，可以改变列表的长度、内容和顺序
        可存储不同类型的元素，例如整数、字符串、浮点数、布尔值

    （3）列表的定义
        字面量定义： 
            list1 = [] 空列表,是有意义的，可以往里新增
            list2 = [1,2,3,4,5,"true",True]
        构造方法定义
            list1 = list("abc")
            list2 = list([1,2,3,4])

    （4）列表中元素的引用
        可用下标形式引用列表中的元素，不能超过列表元素个数-1，否则越界错误
            list1 = [1,2,3,4,5,6,("hello",True),(False,1)]
            print(list1[6][0])

    （5）列表中元素的修改
        list1 = [1,2,3]
        list1[0] = "hello"
        print(list1[0])

    （6）列表的切片操作
        list1 = [1,2,3,4,5,6,7,8,9]
        print(list1[0:4])
        print(list1[:2])
        print(::-1)

    （7）列表的用途
        存储一组相关的数据。列表是一种有序的数据结构，可以用于存储一组相关的数据，如学生的成绩、员工的信息
        数据的容器。列表提供来编辑的操作方法，可以进行遍历、搜索、插入和删除等
        算法和数据结构中的应用。列表可以用于实现栈、队列、链表等

2、列表操作
    （1）获取列表元素个数
        len() 获取列表元素个数

    （2）统计查找元素
        count() 统计参数出现的次数
        index(value,start,stop)在列表中查找参数value第一次出现的下标位置

    （3）增加元素
        append()
            list1 = []
            list1.append("hello")
        insert()
            list2 = [1,2,3,4]
            list1.insert(0,"A") #在第1个位置插入字符A
            print(list1)

    （4）删除元素
        del
            list1 = [1,2,3,4]
            del list11    #del可以删除任何数据。删除元组是删除所有的数据，不可以删除元组的元素
        remove()
            remove() 在列表中删除第一个指定的数据，如果删除的数据不存在则抛出错误
            list1 = [1,2,3,4,5]
            list1.remove(3)
        pop()
            pop() 从列表中取出并删除指定下标位置的元素，默认取出并删除最后一个元素，如果指定下标不存在，则会抛出一个错误
            list1 = [1,2,3,4,5,6,7]
            list1.pop(3)
            list1.pop() #删除最后一个元素
        clear()
            clear() 清空列表
            list1 = [1,2,3,4,5,6,7]
            list1.clear()
            print(list1)  #list1 = []

    （5）列表排序
        sort(key,reverse) 对列表进行排序 
        sort方法默认对基本数据类型进行升序排序
        reverse参数将表元素排序后将列表逆序，实现降序排序
        key参数用来指定排序规则
        list1 = ["a","abc","A"]
        list1.sort()
        list1.sort(reverse=True)

        字典不能进行排序，若要排序则用：
        如：stu=[{"name":"tom","age":22},{"name":"rose","age":32},{"name":"tony","age":18}]
        stu.sort(key=lambda x:x["name"])


3、元组和列表的区别
    （1）相同点
        都是有序的，可迭代的数据结构
        都是异构的，都可以存放不同数据类型的元素
        
    （2）不同点
        元组是不可变的，不可以进行增删改操作，一旦定义，无法修改，空元组是无意义的
        列表是可变的，可以对列表中的元素进行增删改查操作，空列表是有实际意义的
        
    （3）内存占用
        由于元组与列表内部的实现机制不同（元组不可变），在相同元素和个数的情况下，元组占用内存空间更小

    （4）总结对比
            对比           元组                 列表
            定义          (1,2,3)               [1,2,3]
            修改          不支持                 支持
            添加          不支持                 支持
            删除          不支持                 支持
            索引访问       支持                   支持
            切片          支持                   支持
            遍历          支持                   支持
            应用场景      固定的，不会被修改的数据   不固定的，可以被修改的数据
            占用内存       较小                   较大
